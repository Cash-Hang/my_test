
golang的rpc支持三个级别的RPC：TCP、HTTP、JSONRPC

运行时一次客户机对服务器的RPC调用步骤有：
	调用客户端句柄，执行传送参数
	调用客户端系统内核发送网络信息
	消息传送到远程主机
	服务器句柄得到消息并取得参数
	执行远程过程
	执行的过程将结果返回服务器句柄
	服务器句柄返回结果，调用远程系统内核
	消息传回本地主机
	客户句柄由内核接收消息
	客户接收句柄返回的数据

（2）调用RPC服务
有两种方式：同步或异步
  同步方式client.Call("rpc上的公开类名:公开方法", 第一个传入的变量, 第二个传入的变量)
  异步方式divCall := client.Go("rpc上的公开类名:公开方法", 第一次传入的变量, 第二个传入的变量, nil)
  replyCall := <- divCall.Done        阻塞，等待异步完成



举个例子，正确的RPC函数格式如下
    func (t *T) MethodName(argType T1, replyType *T2) error

    T、T1和T2类型必须能被encoding/gob包编解码。


JSON RPC是数据编码采用了JSON，而不是gob编码，其他和上面介绍的RPC概念一模一样的。